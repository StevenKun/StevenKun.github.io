<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git版本控制工具——终极]]></title>
    <url>%2F2018%2F11%2F01%2Fgit-4%2F</url>
    <content type="text"><![CDATA[你以为初级，进阶，高级就完成了吗？还有我定义的终极呢，嘻嘻 初级的目标是：提交，添加修改 进阶的目标是：查看更改，查看提交记录，撤销未提交修改 高级的目标是：分支 终极的目标是：与远程版本库协作 这个需要注册github，然后创建一个远程版本仓库，复制仓库的url 远程版本库克隆到本地在android项目目录中打开git bash ,执行 git clone https://github.com/StevenKun/ShoppingCart.git URL为仓库的URL 然后可以看到目录中出现了仓库的文件夹，将仓库里的文件夹内容复制到android studio创建项目文件夹里边， 有相同的替换掉，ok 本地的修改同步到远程版本库git push origin master //origin指定的是远程版本库的git地址， master指的是同步到哪个分支上； 远程版本库上的修改同步到本地主要有fetch,和pull两种操作 fetch git fetch origin master //将远程版本库代码同步到本地,存放在origin/master分支上 git diff origin/master //查看远程仓库里修改了哪一些 git merge origin/master //将origin/master上的修改合并到主分支 full git pull origin master //相当于同时执行了fetch 和merge命令 总结git的基本用法就是这些。 真心好用哦 ，这下终于知道android studio里的代码为什么都是绿色的啦 。 下来再看git的一些相关文档也就可以看懂了，这就入门了。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git版本控制工具——高级]]></title>
    <url>%2F2018%2F11%2F01%2Fgit-3%2F</url>
    <content type="text"><![CDATA[学习完了进阶，即将迎来高级，都已经迈过了一只脚，另一只脚也来吧。 初级，建立仓库，添加，提交。 进阶，查看修改，撤销修改，以及查看提交记录 高级呢？往下看 分支分支就是在现有代码的基础上开辟一个分叉口，使得代码可以在主干线和分支线同时进行开发，且相互之间不会影响。 git branch version1.0 //创建分支verison1.0 git branch //查看有哪些分支 git checkout version1.0 //切换到分支version1.0 因为分支2不会影响分支1 所以有时候要让同步时 git checkout master git merge version1.0 就可以让version1.0分支上修改并提交的内容合并到master主干上。但有时候会有代码冲突哦。 这下版本更替就没问题了，就是app更新的问题了哦]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git版本控制工具——进阶]]></title>
    <url>%2F2018%2F11%2F01%2Fgit-2%2F</url>
    <content type="text"><![CDATA[好了，初级学好了 就学一下进阶 ，毕竟靠初级还说不上懂git. 前边学的是创建本地仓库：git init; 仓库添加文件：git add . ; 仓库提交文件：git commit -m “ “; 现在开始进阶 查看修改内容git status //查看上次提交后的所有文件中哪些已经被修改 git diff // 查看具体修改了哪些内容，如果只想看其中一个，后加文件路径和文件名 撤销未提交的修改git checkout 文件路径/文件名 //这种撤销只能撤销未添加的修改 如果要撤销已经添加的修改，可以先撤销添加，即先： git reset HEAD 文件路径/文件名，然后再 git checkout 文件路径/文件名 查看提交记录git log 当提交记录特别多的时候，可以只查看其中一条记录 git log a51bd7e2fc81da0890428359710aa8c0bedeaa0a -1 如果要查看这个提交具体修改了什么，可以使用 git log a51bd7e2fc81da0890428359710aa8c0bedeaa0a -1 -p 好了 以上 就是进阶教程 现在修改代码什么的已经无忧喽！！！！！！！！！ 可进可退。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[essay（5）]]></title>
    <url>%2F2018%2F10%2F31%2Fessay%2F</url>
    <content type="text"><![CDATA[江湖笑，恩怨了，人过招，笑藏刀。 金庸去了！ 那些年小说角色的演员的粉丝们 那些喜欢《江湖笑》《笑傲江湖》主题歌的哥迷们 那些深夜偷偷看武侠书，嘴角含笑的读者们 相信不少都会流泪 感慨 我相信未来还有著名的文学作品 但能风靡中国的，产量如此之高的作家只有一个 笔名“金庸”，姓名“查良镛” 被死了20多次的金庸，这次 一路走好。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git版本控制工具——初级]]></title>
    <url>%2F2018%2F10%2F31%2Fgit-time%2F</url>
    <content type="text"><![CDATA[git 版本控制工具，因为自己已经开了一个小型的应用程序，下来就是迭代更新，但更新的时候如果出问题了怎么办呢？不小心删掉了代码怎么办？使用git ，给你梁静茹的勇气。 既然是初级 ，只要知道这几个就好 安装Git 百度直接搜Git,ok? 创建代码仓库 找到git bash 打开 //这是配置你的身份 git config –global user.name “用户名” git config –global user.email “ 邮箱名 “ //创建代码仓库,在项目目录之下执行 ==git init== 如果在目录下生成.git文件夹即为创建成功。 如果删除.git文件夹即为删除仓库。 提交本地代码 提交使用add和commit命令 ==git add +文件名== //添加单个文件 ==git add .== //添加目录下所有文件 ==git commit -m “First commit.”== //执行提交操作，引号内为描述 ok!!!!!!!!!!!! 初级就这些内容 ，下来更新 进阶。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[essay（4）]]></title>
    <url>%2F2018%2F10%2F29%2Fessay-4%2F</url>
    <content type="text"><![CDATA[月底了，工作两个月了 ，哥也算有2个月工作经验的人了… 月底总结：考勤（1颗星）这个月从10月8号到10月30号，从未迟到，也是让人惊讶，突破了记录。 健身（1颗星）这个月去了9次健身房，还剩9天的时间，有点尴尬，健身是真的累，让人一上班就没有精神，嗜睡，可怕。我的饭碗不够铁啊。不过身材上应该还是有明显的改善吧，肚子上的肉肉似乎少了一些？希望不是错觉。 英语 （2颗星）英语这东西，这个月的成果为0…..，报的一个英语学习的app体验课，也没有耐心学下去。 开发 （3颗星）动手啦，开始了第一个小的app应用，虽然只是一个订单查询的app，不过涉及到了login，版本更新，一个类似物流的状态显示自定义控件，麻雀虽小，五脏俱全嘛。也开始涉及到了网络编程，而不再是单机了。 消费 （1颗星）高，很高，下个月吃土吧]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[android开发流程]]></title>
    <url>%2F2018%2F10%2F19%2Fproduct%2F</url>
    <content type="text"><![CDATA[android开发流程，开发一个app所需要根据的流程 用户需求分析 了解这个企业所针对的广大用户的需求 产品原型设计 产品原型设计也就类似于一个APP产品的草图，在经过深度的用户分析之后，将整理出的需求分类、排序为功能节后模块，利用这些功能模块就能搭建出简单的产品原型。 UI视觉设计 UI设计师才开始对APP的界面进行美化，依据所表现的内容进行版面结构设计，设计风格控制、并对每一块区域进行相应的配色、绘制功能菜单图标、设计页面元素等，在此期间就需要不断的沟通修改，最终设计出所有的APP界面效果图。 数据库搭建 按照需求分析整理出来的功能数据处理情况，建立合理的数据库表结构，优化数据算法，提升数据的处理效率，保证在使用APP的过程中数据的安全性、准确性、稳定性和及时性。 服务器端开发 一款APP应用的核心处理都是由服务端的程序完成的，客户端的APP知识需要收发数据，由于用户的移动端设备硬件配置和存储容量有限，因此核心数据处理过程均是由服务器端进行运算处理的，这种方式也被称为云计算，服务器处理完成之后反馈给客户端APP。因此服务器端的程序开发极为重要，所有的功能均需要严格按照需求分析阶段整理的功能来进行开发。 android客户端开发 app程序测试 APP的全面测试，此测试是模拟用户在正常使用的情况下以及非正常使用的情况下有可能出现的问题，当然，需要导入必要的数据进行测试，出现错误继续开发修复，通过则证明整体APP已经完成，然后再将成品交由用户试用。 上传到应用商店 完成签名验证之后，开发好的客户端APP程序就可以提交发布到各应用商店 app的更新和维护]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[反编译]]></title>
    <url>%2F2018%2F10%2F15%2Fdecompile%2F</url>
    <content type="text"><![CDATA[众所周知，java的编译是将一个.java文件编译成.class文件才能被执行，原则上，阅读.class文件是无法让你知道它的实现的，但总有一些友好的工具，可以帮助我们更好的学习其他人的代码。这些工具就是反编译工具，即将.class文件编译为.java文件。 工具 apktool_2.3.4 （可以让你查看layout文件，程序配置文件，；类库等文件） dex2jar-2.0 （将apk反编译成Java源码（classes.dex转化成jar文件）） jd-gui-windows-1.4.0（查看APK中classes.dex转化成出的jar文件，即源码文件） 流程 下载 下载上边的三个工具 使用 将三个工具放在同一文件夹中 apktool_2.3.4的使用 在目录中按住shift ，右键在此处进入命令行窗口，使用命令java -jar apktool.jar d demo.apk xxx . xxx指的是放在什么目录下 demo.apk是要反编译的app名字 dex2jar-2.0的使用 将工具dex2jar-2.0解压 将app改后缀，改为.zip，然后解压，解压后会有一个classes.dex文件，,把其放在dex2jar-2.0目录下，在dex2jar-2.0目录下同样右键在此处进入命令行窗口，使用命令d2j-dex2jar.bat classes.dex回车，生成classes-dex2jar.jar文件 jd-gui-windows-1.4.0的使用 安装环境要jre1.7 ,我本身10.0.4，系统win10，电脑权限不全，不能进入，修改注册表，点击出现coffee，但没界面，从新下载，可以。 然后将dex2jar-2.0生成的classes-dex2jar.jar用jd-gui打开即可。 总结 三大反编译，copy点别人的创意还是可以得，但如果有使用代码混淆app的，就有点力不从心了，不过也会出来一部分，好了，还有，工具要用最新的！！！！！！！工具要用最新的！！！！！！！工具要用最新的！！！！！！！]]></content>
      <categories>
        <category>deciompile</category>
      </categories>
      <tags>
        <tag>反编译</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ZigBee]]></title>
    <url>%2F2018%2F10%2F12%2FZigBee%2F</url>
    <content type="text"><![CDATA[今天主要谈一谈物联网，很多人都知道物联网是国家发展的战略之一，但它具体干什么，应用在哪些领域不太清楚。个人愚见，不对就不对吧 物联网的定义物联网是互联网的一种延伸出来的说法，互联网是区域内所有的计算机网络连接在一起，而物联网就是区域内，所有的东西通过网络连接在一起，而你就是这个区域内绝对的掌控者。 物联网的使用 工业： 个人预感，如果说工业3.0 实现自动化，直到完成信息化实现进入工业4.0，那么工业4.0就是智能化，而实现智能化的基础就是物联网的使用。 德国所谓的工业四代(Industry4.0)是指利用物联信息系统(Cyber—Physical System简称CPS)将生产中的供应，制造，销售信息数据化、智慧化，最后达到快速，有效，个人化的产品供应。 家庭：家庭中，小米，曾今的乐视，现在的阿里，腾讯都是家庭生活领域的佼佼者，产品有天猫精灵，智能音箱，智能灯泡，智能插板等，但不得不说，划时代的产品还没有出现，格局未定，毕竟这个领域也太大。 生活：如果物联网在工业，家庭中，已经有很大的想象空间的话，生活中的设想就让人震撼了，手机，GPS，平板，都在改变着人们的生活，无人驾驶，无人商店，无人直升机，空中摄影，都是让人憧憬的东西，期待那一天的到来。]]></content>
      <categories>
        <category>ZigBee</category>
      </categories>
      <tags>
        <tag>ZigBee</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[essay(3)]]></title>
    <url>%2F2018%2F10%2F10%2Fessay-3%2F</url>
    <content type="text"><![CDATA[国庆假期过去了，买了眼镜，办了健身卡，修了手机，从前的想要做的事情一件一件实现，我也逐渐稳定了下来，现在最重要的事情大约就是好好努力学会Android了吧。 学会Android原生这是初学Android的最先学习的吧，控件方面确实不用多看，最后发现用的大多数都是Material Design,尴尬 健身光猪圈健身房，环境还行，在一个办公楼10层，往外一看，城市的霓虹进入眼帘，虽然健身房比较小巧，但也基本的设备都有了，最重要的是比较安静，没事在这里流点汗，心情也会好很多。 ##]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[essay（2）]]></title>
    <url>%2F2018%2F09%2F27%2Fessay2%2F</url>
    <content type="text"><![CDATA[最近比较忙，约有一个星期没怎么写了中秋作为发了工资的第一个节日，带着姐们一家和哥一家吃了个火锅，宽板凳火锅店，味道不错，估计今后还会去吧。 游戏的话，这段时间都没什么时间玩，玩的心也越来越淡了。 前天被领导带着吃了个饭，领导不怎么会和人聊天，只是给我推荐了一下将来的发展方向，让我非常感谢。少川像个标准的京都大少爷一样，说起来什么都是一套一套的，还是很照顾我的。 昨天是上了一天课，讲了讲安全，内控，福利，结果一考试，还是各种懵，O(∩_∩)O哈哈~。 今天上午开了个阿里宝卡，估计旧的手机号，渐渐就用的少了。天津在我身上留下的痕迹渐渐变少，正如我当初离开家乡到天津上学一样，再去，估计都已经陌生。山西—成长，天津—进学，北京—工作，都能当一本漂流记来写了。 从今而后，我又是新生。 加油，坤！！！。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Studio CodeFormatting]]></title>
    <url>%2F2018%2F09%2F20%2FAndroid-Studio-CodeFormatting%2F</url>
    <content type="text"><![CDATA[Android Studio的超级实用小技巧，还在嫌弃网上copy的代码复制到IEE上乱吗？是不是代码格式化后，间距有时候又大的吓人呢？为了保护你的眼睛，找到了一个只需要2s变整齐的小方法。 Ctrl +A 全选 Ctrl + Shift +J 所有代码变成一行 Ctrl +Alt +L 格式化代码 Ok,看看，是不是变得整齐了呢？No也别找我了 ，GG。]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>-Android -Android Studio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[essay（1）]]></title>
    <url>%2F2018%2F09%2F17%2Fessay%2F</url>
    <content type="text"><![CDATA[感慨时间的流逝，没钱的烦恼，北漂生活的艰辛与难受，以及对未来的迷茫。 时间的流逝不比和我一起上学的小伙伴，刚毕业的我已经25岁，回首昨天，似乎还是在学校的生活，而现在，已经是北漂一族的存在，孤身站在这高楼林立的街头，忙于安静的办公室，不知不觉的过去一天又一天。 没钱的烦恼钱是个好东西，让你加速的成长，让你不必执着于锅碗瓢盆之中，让你的爱情，友情，亲情保鲜又持久。虽然第一个月的工资明天就发，但刚到手就没多少了，下个月的工资只能细细的安排。 30%的工资存到银行。 ≈1500 年度理财定期 20%的工资用于生活花费。 ≈1000 吃饭，交通，手机费 10%的工资用于自身的提升。 ≈500 买书，看视频,健身等 10%的工资用于生活品质的提高。 ≈500 买衣服，数码设备等 10%的工资用于其他支出。 ≈500 请客，会友，送礼 剩余的投资理财 ≈1000 短期理财 对未来的迷茫身处北京，千千万万的人潮之中，迷茫是一件很容易的事情，比拼本事？现在敢留北京的外地人，哪一个不是身有一技之长，或者学有所成之辈，但一将功成万骨枯，又有多少能成功留京一辈子呢？ 户口户口虽然只是一个小本本，但却代表着你的根是在哪里，北京身为帝都，如果能在这里生长，自然根深苗壮，然而研究生户口都落不到这里，何况小小的本科。应届毕业就已经25周岁，超出“进京”指标1岁。即使单位有指标也无望。 房子现在北京三环之内，难找400万以下的房子，四环五环，300W是低标准，六环七环，也要200万左右的价格，房子还能上天？以前我不信，现在我是相信了，有个段子讲的就是两个北京人一结婚，就相当于两个中型企业合并喽。 恋爱身处北京，估计娱乐圈也就公司周围，加上住处周边，较少的同龄人际圈带来的是恋爱的交往对象缺乏。北京虽大，人多，带来的是更小的交际圈，这也是物极必反吧。程序员NEW一个对象？此对象非彼对象啊，如果我能自己选择的话，就好了。 三大关键问题 ​]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[android bug]]></title>
    <url>%2F2018%2F09%2F17%2Fandroid-studio-bug%2F</url>
    <content type="text"><![CDATA[android studio3.1.4使用中遇到的问题，持续更新帖。 无法可视化界面 1234修改前&lt;item name=&quot;textInputStyle&quot;&gt;@style/Widget.Design.TextInputLayout&lt;/item&gt; 添加组件错误 AS- This view is not constrained vertically. At runtime it will jump to the left/(0,0) unless you. 意思是：组件没有锁定，重合了 解决方法：添加约束 问题：Your project path contains non-ASCII characters，你的项目路径不支持中文路径 解决方法： ​ 路径改为英文，重新导入即可。 ​ idea.properties配置文件： ​ # ———————————————————————–​ # 设置项目路径支持中文​ #———————————————————————– com.android.build.gradle.overridePathCheck=true ​ OK 重启解决。 问题：运行时，让出现edit Configuration 界面 并且错误提示Pleaseselect Android SDK 解决方法： 选择 File -&gt; Project Structure——–调整Build Tools Version 调整后，程序各种bug,别担心，一般是工具太旧，提高就可以解决。 问题：空指针异常 一般问题出在类未实例化 解决方法： 类实例化即可。 问题：线程中无法Toast 错误提示：Can’t create handler inside thread that has not called Looper.prepare() Looper类，是用来封装消息循环和消息队列的一个类，用于在android线程中进行消息处理。执行Toast时，会执行一个加入队列的方法，在主线程中，会默认自动创建一个Looper，可以进行线程处理，而子线程中，没有创建，所以无法直接进行消息处理。 解决方法： Looper.prepare(); Toast.maketext(…); Looper.loop(); 问题：UI中出现中文乱码 解决办法： 首先明白是什么时候出现的乱码，出现乱码的原因是什么。 从数据库读取出来的乱码： 1con = DriverManager.getConnection("jdbc:jtds:sqlserver://" + IP + ":1433/" + DBName + ";useunicode=true;characterEncoding=UTF-8", USER, PWD); ==”;useunicode=true;characterEncoding=UTF-8”==看是否添加了吗？ uri取值时候出现乱码： 使用encode()和decode(); d d d]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>-Android -Android Studio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[android studio配置优化]]></title>
    <url>%2F2018%2F09%2F14%2Fandroid-studio%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[android studio 3.1.4已经下载下接近两周了，两个星期的使用中发现不少问题，比如加载慢，快捷键不符合自己的习惯等，Google亲儿子表现出明显的水土不服问题。故今天主要研究怎么才能提高这个IDE的性能，不少资料可能摘自网页中的，在此感谢大家的分享。除此之外，下周估计会写一个bug问题集锦。解决各种android中遇到的问题。 Sitting 设置更改工程打开关闭设置:Settings – System Settings 这里反选Reopen last project on startup，下次打开Android Studio时默认进入主页面，所以不需要自动打开上次关闭的工程。 代理设置：（目前似乎用不了，干脆不用了….，复制的网上的）很多时候都要访问谷歌官方服务器，而由于一些其他原因，会导致连接不上或者速度很慢，那就需要我们设置一下国内的镜像代理了，Settings – System Settings– HTTP Proxy。 如：中国科学院开源协会镜像站地址 ​ http://mirrors.opencas.cn 端口：80 ​ http://mirrors.opencas.org 端口：80 ​ 上海GDG镜像服务器地址: ​ http://sdk.gdgshanghai.com 端口：8000 ​ 腾讯Bugly 镜像: ​ http://android-mirror.bugly.qq.com 端口：8080 ​ 自动更新：Settings – System Settings–Updates 中勾选 Check for updates in channel ，即开通了自动检查更新。也可以禁用自动检查更新，减少AS的检查更新内存消耗。 下拉列表为更新通道，主要有4种： 1）Stable Channel ： 正式版本通道，只会获取最新的正式版本。 2）Beta Channel ： 测试版本通道，只会获取最新的测试版本。 3）Dev Channel ： 开发发布通道，只会获取最新的开发版本。 4）Canary Channel ： 预览发布通道，只会获取最新的预览版本。 以上4个通道中， Stable Channel 最稳定，问题相对较少， Canary Channel 能获得最新版本，问题相对较多。 鼠标悬停显示文档当鼠标悬停到某一个类的时候，会自动显示该类的文档说明，Settings – Editor– General]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>-Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo的安装及使用(2)]]></title>
    <url>%2F2018%2F09%2F13%2Fuse-hexo-blog%2F</url>
    <content type="text"><![CDATA[今天主要写写关于hexo插件，功能的一些添加，比如站点地图，搜索，插入图片等功能，可以极大的改善hexo的使用和美观。闲话不多说，下来看干货。 站点地图 安装 $npm install hexo-generator-seo-friendly-sitemap –save 在 _config.yml 中添加 sitemap: path: sitemap.xml RSS 安装 $npm install hexo-generator-feed 在_config.yml文件中 feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: ‘ ‘ 文章插入图片功能 修改_config.yml配置文件post_asset_folder项为true。 安装 npm install hexo-asset-image –save 等待一小段时间后，再运行hexo n “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片： 1![你想输入的替代文字](xxxx/图片名.jpg) 搜索功能 安装npm install hexo-generator-searchdb –save 修改 站点配置 文件 search: path: search.xml field: post format: html limit: 10000 修改 主题配置文件 local_search: enable: true]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>-hexo安装 -配置 -使用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo的安装及使用(1)]]></title>
    <url>%2F2018%2F09%2F11%2Fuse-hexo-blog%2F</url>
    <content type="text"><![CDATA[这篇文章主要是对hexo在Windows平台上的使用，安装，和配置做一个简单的说明，以及常见的问题解答。本次主题使用的是nexT，Blog编辑器使用的是MarkDown pad 2,由于第一次接触hexo，可能存在不少问题，望指正。 #hexo的安装​ 安装git,安装地址,一路next即可 安装node.js,安装地址,同上； 安装hexo，在电脑的一个新建文件夹中，右键，选择git bash here，输入以下命令 $npm install -g hexo-cli ​ $npm init //这个也可以后边加目录 但因为选择的是已经在此目录git bash here ，故默认是当前路径 $npm install 即可完成hexo的安装 ，这个新建的文件夹即为hexo的安装目录。如图 这个目录里的大部分，因为版本或者个人配置，可能有个别不同，但大体这样。 启动服务器 要能够在本地预览自己的博客，需要本地启动服务器 $npm install hexo-server --save 安装完成后执行 $hexo s 浏览器输入[ http://localhost:4000]( http://localhost:4000 &quot;自己的博客&quot;)看看自己的博客建立好了没 生成静态页面，部署在服务器的根目录下 hexo g //生成静态文件 ​ npm install hexo-deployer-git –save //安装git部署插件 ​ npm install hexo-deployer-git –save //安装git部署插件 下来需要修改安装hexo的目录下的_config.xml文件 ​ deploy: type: git //部署类型 repo: (Repository地址) branch: (分支名称) ​ 例如我的是 ​ deploy: type: git repo: https://github.com/StevenKun/StevenKun.github.io.git branch: master 登录在浏览器中输入URI（如果绑定域名输入域名，如果没绑定域名，输入repo的地址 去掉.git后缀就可以），例如我的是StevenKun.github.io,即可打开网站 。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>-hexo安装 -配置 -使用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PDA终端的APP安装流程]]></title>
    <url>%2F2018%2F09%2F11%2FPDA%E7%BB%88%E7%AB%AF%E7%9A%84APP%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[PDA手持设备的app的安装。超简单系列，虽然中间可能会出点问题，BOSS让写就写呗。没什么说的。 环境介绍斑马ZEBRA手持终端 android系统 eCenter.apk安装包 安装流程 关联扫码 Scanconfige中第一个选项 WiFi设置 连接WiFi 文件管理 文件管理系统中找到com.android.setting，进入。安装eCenter.apk，打开 服务器设置 三厂设置：IP为10.116.0.35 ​ 端口号：5010 激活 找邵工激活 下载 应用商店下载SMCThemal 安装 下载下后直接安装即可使用]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>-Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F09%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[​ Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>-test</tag>
      </tags>
  </entry>
</search>
